name: Deploy ADF LinkedService

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

env: 
  keyVaultName: 'kx1-demo-dev'
  connectionSecretName: 'kx-demo-constring-dev'
  credentialSecretName: 'kx-demo-cred-dev'

jobs:
  
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install jq
      run: sudo apt-get install jq

    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: >
              {
                "clientId":"${{ secrets.AZURE_CLIENT_ID }}",
                "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
                "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}",
                "tenantId":"${{ secrets.AZURE_TENANT_ID }}"
              }
        enable-AzPSSession: true

    - name: Read linkedService JSON files and deploy
      run: |
          keyVaultLinkedService=$(cat ./linkedService/AzureKeyVault.json)
          keyVaultLinkedService=$(echo "$keyVaultLinkedService" | jq --arg keyVaultUrl "https://${{env.keyVaultName}}.vault.azure.net/" '.properties.typeProperties.baseUrl = $keyVaultUrl')
          linkedService1=$(cat ./linkedService/AzureBlobStorage.json)
          linkedService1=$(echo "$linkedService1" | jq --arg connectionSecretName "${{env.connectionSecretName}}" '.properties.typeProperties.connectionString.secretName = $connectionSecretName')  
          
          linkedServices=$(jq -n \
            --arg keyVaultLinkedService "$keyVaultLinkedService" \
            --arg linkedService1 "$linkedService1" \
            '[
              {
                "name": "AzureKeyVault1", 
                "definition": $keyVaultLinkedService | fromjson 
              },
              {
                "name": "AzureBlobStorage1", 
                "definition": $linkedService1 | fromjson 
              }
            ]')
  
          az deployment group create \
            --resource-group "komatsu" \
            --template-file ./bicep/modules/linkedservice.bicep \
            --parameters dataFactoryName=PresentationPOC \
            --parameters linkedServices="$linkedServices" 
            